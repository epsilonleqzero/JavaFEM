<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<ui:composition template="/WEB-INF/templates/masterTemplate.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:m="http://www.w3.org/1998/Math/MathML">

    <ui:define name="title">Ted Kwan</ui:define>

    <ui:define name="content">
        <header>
            <h2>Plot Phase Plane in 2-D</h2>
            <span class="byline">Written and developed by Ted Kwan</span>
        </header>
        <p>Please select a function below to plot, then click the plot button to expand a new window.</p>
        <h:form>
            <p:wizard flowListener="#{phase2SelectionBean.onFlowProcess}">
            <!--                <h1><h:outputText value="Different ODEs"/></h1>-->
            <p:tab id="chooseode" title="Ode Choice">
                <p:panel header="Selection">
                <p:dataTable id="plotData" value="#{phase2SelectionBean.odelist}" selection="#{phase2SelectionBean.odefun}" var="item" rowKey="#{item.name}">
                <f:facet name="header">
                    Different ODEs
                </f:facet>
                <p:column selectionMode="single" style="width:48px;text-align:center"/>
                <p:column headerText="ODE">
                    <h:outputText value="#{item.name}"/>
                </p:column>
                <p:column headerText="Param a">
                    <h:outputText value="#{item.a}"/>
                </p:column>
                <p:column headerText="Param b">
                    <h:outputText value="#{item.b}"/>
                </p:column>
                <p:column headerText="Param c">
                    <h:outputText value="#{item.c}"/>
                </p:column>
                <p:column headerText="Param d">
                    <h:outputText value="#{item.d}"/>
                </p:column>
                <p:column headerText="Initial x condition">
                    <h:outputText value="#{item.x0}"/>
                </p:column>
                <p:column headerText="Initial y condition">
                    <h:outputText value="#{item.y0}"/>
                </p:column>
<!--                <f:facet name="footer">
                    <p:commandButton process="plotData" value="Show Phase Plane" icon="ui-icon-extlink" actionListener="#={phase2Bean.showPP()}">
                    </p:commandButton>
                </f:facet>-->
            </p:dataTable>
            </p:panel>
            </p:tab>
            <p:tab id="chosenode" title="Ode Plot">
                <p:panel header="Selected">
                <div id="myDiv2" style="width:75%;height:400px;"></div>
        <script type="text/javascript">
            var REFRESH_INTERVAL = 1000;
            
            var data = null;
            var graph = null;
            var query=null;
            var draw = function() {
            // create an empty table to initialized the graph
            data = new google.visualization.DataTable();
            data.addColumn('number', 'x');
            data.addColumn('number', 'y');
            data.addColumn('number', 'z');
            data.addColumn('number', 'color');
            data.addRows(<h:outputText value="#{phase2SelectionBean.googdata}"/>);

            // specify options
            var options = {
                width:  "600px",
                height: "600px",
                style: "line",
                showPerspective: true,
                showGrid: true,
                showShadow: false,
                keepAspectRatio: true,
                verticalRatio: 0.5,
                cameraPosition: {
                    distance: 1.4,
                    horizontal: 0.0,
                    vertical: 1.0
                }
            };
            // Instantiate our graph object.
            graph = new links.Graph3d(document.getElementById('myDiv2'));

            // Draw our graph with the created data and options
            graph.draw(data, options);
            

            refresh();
        };
        
        google.load("visualization", "1");

        // Set callback to run when API is loaded
        google.setOnLoadCallback(draw);
        
        var redraw = function() {
            data = new google.visualization.DataTable();
            data.addColumn('number', 'x');
            data.addColumn('number', 'y');
            data.addColumn('number', 'z');
            data.addColumn('number', 'color');
            data.addRows(<h:outputText value="#{phase2SelectionBean.googdata}"/>);
            graph.redraw(data);
            
        };
        var refresh = function() {
            // send the datasource request
            //query.send(redraw);
            data = new google.visualization.DataTable();
            data.addColumn('number', 'x');
            data.addColumn('number', 'y');
            data.addColumn('number', 'z');
            data.addColumn('number', 'color');
            data.addRows(<h:outputText value="#{phase2SelectionBean.googdata}"/>);
            graph.redraw(data);

            window.setTimeout(refresh, REFRESH_INTERVAL);
        };
        </script>
                </p:panel> 
            </p:tab>
            </p:wizard>
        </h:form>
        
            
<!--        <input type="button" id="makePlot" value="create Plot using Jquery"/>
        
        <div id="myDiv2" style="width:100%;height:400px;"></div>
            <h:outputScript>
                $("makePlot").click(function(){
                TESTER = document.getElementById('myDiv2');
                        var a = <h:outputText value="{phase2Bean.xarpp}"/>
                        var b = <h:outputText value="{phase2Bean.yarpp}"/>
                        var data = [
                            {
                                opacity: 0.8,
                                type: 'scatter',
				mode: 'lines',
                                x: a,
                                y: b
                            }
                        ];
                var layout = {
                    autosize: false,
                    width: 600,
                    height: 500,
                    margin: {
                        l: 50,
                        r: 50,
                        b: 100,
                        t: 100,
                        pad: 4
                    }
                };
                Plotly.newPlot('myDiv2', data, layout);
                });
           </h:outputScript>-->
    </ui:define>

</ui:composition>
